[build-system]
requires = ["setuptools>=61.0", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_file = "pandera/_version.py"

[project]
name = "pandera"
dynamic = ["version"]
authors = [
    {name = "Niels Bantilan", email = "niels.bantilan@gmail.com"},
]
description = "A light-weight and flexible data validation and testing tool for statistical data objects."
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.9"
keywords = ["pandas", "validation", "data-structures"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "packaging >= 20.0",
    "pydantic",
    "typeguard",
    "typing_extensions",
    "typing_inspect >= 0.6.0",
]

[project.urls]
Documentation = "https://pandera.readthedocs.io"
"Issue Tracker" = "https://github.com/pandera-dev/pandera/issues"
Homepage = "https://github.com/pandera-dev/pandera"

[project.optional-dependencies]
pandas = [
    "numpy >= 1.24.4",
    "pandas >= 2.1.1",
]
strategies = [
    "hypothesis >= 6.92.7",
]
hypotheses = [
    "scipy",
]
io = [
    "pyyaml >= 5.1",
    "black",
    "frictionless <= 4.40.8",
]
mypy = ["pandas-stubs"]
fastapi = ["fastapi"]
geopandas = [
    "geopandas < 1.1.0",
    "shapely",
]
pyspark = ["pyspark[connect] >= 3.2.0, < 4.0.0"]
modin = [
    "modin",
    "ray",
    "dask[dataframe]",
    "distributed",
]
modin-ray = [
    "modin",
    "ray",
]
modin-dask = [
    "modin",
    "dask[dataframe]",
    "distributed",
]
dask = [
    "dask[dataframe]",
    "distributed",
]

polars = ["polars >= 0.20.0"]
all = [
    "hypothesis >= 6.92.7",
    "scipy",
    "pyyaml >= 5.1",
    "black",
    "frictionless <= 4.40.8",
    "pyspark[connect] >= 3.2.0, < 4.0.0",
    "modin",
    "ray",
    "dask[dataframe]",
    "distributed",
    "pandas-stubs",
    "fastapi",
    "geopandas < 1.1.0",
    "shapely",
    "polars >= 0.20.0",
]

[dependency-groups]
dev = [
    "hypothesis >= 6.92.7",
    "ipdb",
    "isort >= 5.7.0",
    "joblib",
    "mypy == 1.10.0",
    "pip",
    "pre_commit",
    "pyarrow",
    "pylint < 3.3",
    "pytz",
    "xdoctest",
    "nox",
    "uvicorn",
    "python-multipart",
    "uv",
]
testing = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-asyncio",
]
docs = [
    "setuptools",
    "sphinx",
    "sphinx-design",
    "sphinx-autodoc-typehints <= 1.14.1",
    "sphinx-copybutton",
    "recommonmark",
    "myst-nb",
    "furo",
    "sphinx-docsearch",
    "grpcio",
    "ray",
    "types-click",
    "types-pytz",
    "types-pyyaml",
    "types-requests",
    "types-setuptools",
]

[tool.setuptools]
packages = ["pandera"]
package-data = {"pandera" = ["py.typed"]}

[tool.pyright]
include = ["pandera", "tests"]
exclude = [".nox/**", ".nox-*/**"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = 20

[tool.ruff]
line-length = 120
extend-exclude = [
    "setup.py",
    ".venv",
    ".nox",
    ".git",
    "asv_bench",
]

[tool.black]
line-length = 79
target-version = [
  'py39',
  'py310',
  'py311',
  'py312',
]
include = '\.pyi?$'
exclude = '''
(
  \.git
  | \.venv
  | \.nox
  | setup.py
  | asv_bench
)
'''

[tool.codespell]
ignore-words-list = ["notin", "splitted", "fo", "strat"]
